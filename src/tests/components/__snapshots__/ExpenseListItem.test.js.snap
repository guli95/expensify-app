// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render expense list item with expenses 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExpenseListItem
    expenses={
      Object {
        "amount": 200,
        "createdAt": 200,
        "description": "aa",
        "id": "1",
        "note": "ss",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ForwardRef(Link)
          to="/edit/undefined"
        >
          <h3>
            description: 
          </h3>
        </ForwardRef(Link)>,
        <p>
          amount: 
        </p>,
        <p>
          created at: 
        </p>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <h3>
            description: 
          </h3>,
          "to": "/edit/undefined",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "description: ",
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            "description: ",
            undefined,
          ],
          "type": "h3",
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "amount: ",
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          "amount: ",
          undefined,
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "created at: ",
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          "created at: ",
          undefined,
        ],
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ForwardRef(Link)
            to="/edit/undefined"
          >
            <h3>
              description: 
            </h3>
          </ForwardRef(Link)>,
          <p>
            amount: 
          </p>,
          <p>
            created at: 
          </p>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h3>
              description: 
            </h3>,
            "to": "/edit/undefined",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "description: ",
                undefined,
              ],
            },
            "ref": null,
            "rendered": Array [
              "description: ",
              undefined,
            ],
            "type": "h3",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "amount: ",
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            "amount: ",
            undefined,
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "created at: ",
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            "created at: ",
            undefined,
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
